{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "DMS gRPC",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "palanisamym14@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "user",
      "description": "User create, login, get accesstoken"
    },
    {
      "name": "fileManager",
      "description": "DMS file operation"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user and get Auth token",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "login user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserLoginResponse"
            }
          }
        }
      }
    },
    "/directory": {
      "post": {
        "tags": [
          "fileManager"
        ],
        "summary": "Creates dir for given input data",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "dir",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DirectoryCreate"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DirectoryRes"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "get": {
        "tags": [
          "fileManager"
        ],
        "summary": "Fetch the created directory and files",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "fetch specfic List of directory items/ file with associated with parent ids",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DirectoryResArr"
            }
          },
          "400": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/directory/{id}": {
      "get": {
        "tags": [
          "fileManager"
        ],
        "summary": "Get selected file / directory",
        "description": "",
        "operationId": "getdirectorybyId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DirectoryRes"
            }
          },
          "400": {
            "description": "Invalid Id"
          },
          "404": {
            "description": "Id not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "fileManager"
        ],
        "summary": "Delete File / folder",
        "description": "Delete the File / folder given Id",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/directory/rename": {
      "put": {
        "tags": [
          "fileManager"
        ],
        "summary": "Update file/directory name",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Rename the file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DirectoryRes"
            }
          },
          "400": {
            "description": "Invalid Id"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/file/upload": {
      "put": {
        "tags": [
          "fileManager"
        ],
        "summary": "Upload file to server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "formData",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileUpload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DirectoryRes"
            }
          },
          "400": {
            "description": "Invalid Id"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/file/download/{id}": {
      "get": {
        "tags": [
          "fileManager"
        ],
        "summary": "Download File",
        "description": "Download File",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "422": {
            "description": "Invalid Id"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserLoginResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "DirectoryCreate": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DirectoryRes": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "level": {
                "type": "string"
              }
            }
          }
        },
        "_id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DirectoryResArr": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "level": {
                  "type": "string"
                }
              }
            }
          },
          "_id": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      }
    },
    "Rename": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "newName": {
          "type": "string"
        }
      }
    },
    "FileUpload": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        }
      }
    }
  }
}